<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestReportingDataSet" targetNamespace="http://tempuri.org/TestReportingDataSet.xsd" xmlns:mstns="http://tempuri.org/TestReportingDataSet.xsd" xmlns="http://tempuri.org/TestReportingDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestReportingConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestReportingConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.CreateReporting.Properties.Settings.GlobalReference.Default.TestReportingConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MonHocTableAdapter" GeneratorDataComponentClassName="MonHocTableAdapter" Name="MonHoc" UserDataComponentName="MonHocTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestReportingConnectionString (Settings)" DbObjectName="TestReporting.dbo.MonHoc" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[MonHoc] WHERE (([MaMH] = @Original_MaMH) AND ([TenMH] = @Original_TenMH))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenMH" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenMH" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[MonHoc] ([MaMH], [TenMH]) VALUES (@MaMH, @TenMH);
SELECT MaMH, TenMH FROM MonHoc WHERE (MaMH = @MaMH)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenMH" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenMH" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaMH, TenMH FROM dbo.MonHoc</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[MonHoc] SET [MaMH] = @MaMH, [TenMH] = @TenMH WHERE (([MaMH] = @Original_MaMH) AND ([TenMH] = @Original_TenMH));
SELECT MaMH, TenMH FROM MonHoc WHERE (MaMH = @MaMH)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenMH" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenMH" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenMH" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenMH" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaMH" DataSetColumn="MaMH" />
              <Mapping SourceColumn="TenMH" DataSetColumn="TenMH" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SinhVienTableAdapter" GeneratorDataComponentClassName="SinhVienTableAdapter" Name="SinhVien" UserDataComponentName="SinhVienTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestReportingConnectionString (Settings)" DbObjectName="TestReporting.dbo.SinhVien" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SinhVien] WHERE (([MaSV] = @Original_MaSV) AND ((@IsNull_TenSV = 1 AND [TenSV] IS NULL) OR ([TenSV] = @Original_TenSV)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenSV" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenSV" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSV" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SinhVien] ([MaSV], [TenSV]) VALUES (@MaSV, @TenSV);
SELECT MaSV, TenSV FROM SinhVien WHERE (MaSV = @MaSV)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenSV" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSV" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MaSV, TenSV FROM dbo.SinhVien</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SinhVien] SET [MaSV] = @MaSV, [TenSV] = @TenSV WHERE (([MaSV] = @Original_MaSV) AND ((@IsNull_TenSV = 1 AND [TenSV] IS NULL) OR ([TenSV] = @Original_TenSV)));
SELECT MaSV, TenSV FROM SinhVien WHERE (MaSV = @MaSV)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@TenSV" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TenSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TenSV" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_TenSV" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="TenSV" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MaSV" DataSetColumn="MaSV" />
              <Mapping SourceColumn="TenSV" DataSetColumn="TenSV" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SinhVienDiemTableAdapter" GeneratorDataComponentClassName="SinhVienDiemTableAdapter" Name="SinhVienDiem" UserDataComponentName="SinhVienDiemTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestReportingConnectionString (Settings)" DbObjectName="TestReporting.dbo.SinhVienDiem" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SinhVienDiem] WHERE (([id] = @Original_id) AND ([MaSV] = @Original_MaSV) AND ([MaMH] = @Original_MaMH) AND ([Diem] = @Original_Diem))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Diem" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Diem" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SinhVienDiem] ([id], [MaSV], [MaMH], [Diem]) VALUES (@id, @MaSV, @MaMH, @Diem);
SELECT id, MaSV, MaMH, Diem FROM SinhVienDiem WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Diem" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Diem" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, MaSV, MaMH, Diem FROM dbo.SinhVienDiem</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SinhVienDiem] SET [id] = @id, [MaSV] = @MaSV, [MaMH] = @MaMH, [Diem] = @Diem WHERE (([id] = @Original_id) AND ([MaSV] = @Original_MaSV) AND ([MaMH] = @Original_MaMH) AND ([Diem] = @Original_Diem));
SELECT id, MaSV, MaMH, Diem FROM SinhVienDiem WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Diem" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Diem" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaSV" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaSV" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MaMH" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MaMH" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Diem" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Diem" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="MaSV" DataSetColumn="MaSV" />
              <Mapping SourceColumn="MaMH" DataSetColumn="MaMH" />
              <Mapping SourceColumn="Diem" DataSetColumn="Diem" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestReportingDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TestReportingDataSet" msprop:Generator_UserDSName="TestReportingDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="MonHoc" msprop:Generator_TableClassName="MonHocDataTable" msprop:Generator_TableVarName="tableMonHoc" msprop:Generator_TablePropName="MonHoc" msprop:Generator_RowDeletingName="MonHocRowDeleting" msprop:Generator_RowChangingName="MonHocRowChanging" msprop:Generator_RowEvHandlerName="MonHocRowChangeEventHandler" msprop:Generator_RowDeletedName="MonHocRowDeleted" msprop:Generator_UserTableName="MonHoc" msprop:Generator_RowChangedName="MonHocRowChanged" msprop:Generator_RowEvArgName="MonHocRowChangeEvent" msprop:Generator_RowClassName="MonHocRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaMH" msprop:Generator_ColumnVarNameInTable="columnMaMH" msprop:Generator_ColumnPropNameInRow="MaMH" msprop:Generator_ColumnPropNameInTable="MaMHColumn" msprop:Generator_UserColumnName="MaMH" type="xs:int" />
              <xs:element name="TenMH" msprop:Generator_ColumnVarNameInTable="columnTenMH" msprop:Generator_ColumnPropNameInRow="TenMH" msprop:Generator_ColumnPropNameInTable="TenMHColumn" msprop:Generator_UserColumnName="TenMH">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SinhVien" msprop:Generator_TableClassName="SinhVienDataTable" msprop:Generator_TableVarName="tableSinhVien" msprop:Generator_TablePropName="SinhVien" msprop:Generator_RowDeletingName="SinhVienRowDeleting" msprop:Generator_RowChangingName="SinhVienRowChanging" msprop:Generator_RowEvHandlerName="SinhVienRowChangeEventHandler" msprop:Generator_RowDeletedName="SinhVienRowDeleted" msprop:Generator_UserTableName="SinhVien" msprop:Generator_RowChangedName="SinhVienRowChanged" msprop:Generator_RowEvArgName="SinhVienRowChangeEvent" msprop:Generator_RowClassName="SinhVienRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MaSV" msprop:Generator_ColumnVarNameInTable="columnMaSV" msprop:Generator_ColumnPropNameInRow="MaSV" msprop:Generator_ColumnPropNameInTable="MaSVColumn" msprop:Generator_UserColumnName="MaSV" type="xs:int" />
              <xs:element name="TenSV" msprop:Generator_ColumnVarNameInTable="columnTenSV" msprop:Generator_ColumnPropNameInRow="TenSV" msprop:Generator_ColumnPropNameInTable="TenSVColumn" msprop:Generator_UserColumnName="TenSV" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SinhVienDiem" msprop:Generator_TableClassName="SinhVienDiemDataTable" msprop:Generator_TableVarName="tableSinhVienDiem" msprop:Generator_TablePropName="SinhVienDiem" msprop:Generator_RowDeletingName="SinhVienDiemRowDeleting" msprop:Generator_RowChangingName="SinhVienDiemRowChanging" msprop:Generator_RowEvHandlerName="SinhVienDiemRowChangeEventHandler" msprop:Generator_RowDeletedName="SinhVienDiemRowDeleted" msprop:Generator_UserTableName="SinhVienDiem" msprop:Generator_RowChangedName="SinhVienDiemRowChanged" msprop:Generator_RowEvArgName="SinhVienDiemRowChangeEvent" msprop:Generator_RowClassName="SinhVienDiemRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="MaSV" msprop:Generator_ColumnVarNameInTable="columnMaSV" msprop:Generator_ColumnPropNameInRow="MaSV" msprop:Generator_ColumnPropNameInTable="MaSVColumn" msprop:Generator_UserColumnName="MaSV" type="xs:int" />
              <xs:element name="MaMH" msprop:Generator_ColumnVarNameInTable="columnMaMH" msprop:Generator_ColumnPropNameInRow="MaMH" msprop:Generator_ColumnPropNameInTable="MaMHColumn" msprop:Generator_UserColumnName="MaMH" type="xs:int" />
              <xs:element name="Diem" msprop:Generator_ColumnVarNameInTable="columnDiem" msprop:Generator_ColumnPropNameInRow="Diem" msprop:Generator_ColumnPropNameInTable="DiemColumn" msprop:Generator_UserColumnName="Diem" type="xs:double" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:MonHoc" />
      <xs:field xpath="mstns:MaMH" />
    </xs:unique>
    <xs:unique name="SinhVien_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SinhVien" />
      <xs:field xpath="mstns:MaSV" />
    </xs:unique>
    <xs:unique name="SinhVienDiem_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SinhVienDiem" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FKMaMH" msdata:parent="MonHoc" msdata:child="SinhVienDiem" msdata:parentkey="MaMH" msdata:childkey="MaMH" msprop:Generator_UserChildTable="SinhVienDiem" msprop:Generator_ChildPropName="GetSinhVienDiemRows" msprop:Generator_UserRelationName="FKMaMH" msprop:Generator_ParentPropName="MonHocRow" msprop:Generator_RelationVarName="relationFKMaMH" msprop:Generator_UserParentTable="MonHoc" />
      <msdata:Relationship name="FKMaSV" msdata:parent="SinhVien" msdata:child="SinhVienDiem" msdata:parentkey="MaSV" msdata:childkey="MaSV" msprop:Generator_UserChildTable="SinhVienDiem" msprop:Generator_ChildPropName="GetSinhVienDiemRows" msprop:Generator_UserRelationName="FKMaSV" msprop:Generator_ParentPropName="SinhVienRow" msprop:Generator_RelationVarName="relationFKMaSV" msprop:Generator_UserParentTable="SinhVien" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>